{"version":3,"sources":["+custom.js","+furniture.js"],"names":["$","document","ready","displayTooltip","event","data","id","tooltip","d3","select","ttWidth","outerWidth","text","season","opp","week","quarter","time","detail","w","window","width","xPos","clientX","attr","yPos","clientY","drawPassGraphic","target","margin","top","right","bottom","left","potentialHeight","height","arcMod","x","scaleLinear","range","y","domain","xAxis","axisBottom","scale","tickValues","tickFormat","d","i","svg","append","line","x1","spot","toString","x2","yards","y1","offset","offsetX1","offsetX2","result","passes","selectAll","enter","plays","touchdown","base","call","drawAttempts","color","interpolate","interpolateHcl","rgb","attContainer","seasons","season_year","interception","on","viewComps","addClass","selSeason","selOpp","removeClass","filterReceivers","selected","desiredRec","html","_loop","sortedData","each","k","v","push","length","drawReceivers","receivers","_","orderBy","receiver","change","selectedRec","this","val","click","getJSON","forEach","value","tempYear","closeList","Date","year","getFullYear","$hedButton","e","hasClass","siblings","stopPropagation","cookie","indexOf"],"mappings":"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","file":"scripts-bundle.js","sourcesContent":["'use strict';\n\n/* global $:true document:true d3:true mapboxgl: true window: true _:true event: true */\n\n$(document).ready(function () {\n  // custom scripting goes here\n\n  var sortedData = [];\n  var romoComps = 2943;\n  var romoTDs = 256;\n  var romoYds = 35499;\n\n  var desiredRec = [];\n\n  /*\n  ///////////////////////////////////////////////////////////////////////////\n  DISPLAYING THE TOOLTIP\n  ///////////////////////////////////////////////////////////////////////////\n  */\n\n  function displayTooltip(event, data, id) {\n    var tooltip = d3.select(id);\n    var ttWidth = $(id).outerWidth();\n\n    // populating the tooltip info with data from the point hovered over\n    tooltip.select('.tt-season').text(data.season);\n    tooltip.select('.tt-opponent').text(data.opp);\n    tooltip.select('.tt-week').text(data.week);\n    tooltip.select('.tt-quarter').text(data.quarter);\n    tooltip.select('.tt-time').text(data.time);\n    tooltip.select('.tt-detail').text(data.detail);\n\n    // use the clientX position in relation to the window width to position the\n    // tooltip to the left or right of the point hovered over.\n    var w = $(window).width();\n    var xPos = 0;\n    if (event.clientX > w / 2.1) {\n      xPos = event.clientX - (ttWidth - 10);\n      tooltip.attr('class', 'tooltip');\n    } else {\n      xPos = event.clientX - 10;\n      tooltip.attr('class', 'tooltip');\n    }\n\n    var yPos = event.clientY + 15;\n\n    tooltip.attr('style', 'left: ' + xPos + 'px; top: ' + yPos + 'px');\n  }\n\n  /* ///////////////////////////////////////////////////////////////////////////\n  // DRAWING THE ARC GRAPHIC\n  /////////////////////////////////////////////////////////////////////////// */\n\n  function drawPassGraphic(data, target) {\n    var margin = {\n      top: 0,\n      right: 50,\n      bottom: 40,\n      left: 50\n    };\n\n    // getting the width and potential height\n    var width = $(target).width();\n    var potentialHeight = width / 3;\n\n    // using the lesser of potentialHeight and 400 as the height of the graphic\n    var height = potentialHeight > 400 ? 400 : potentialHeight;\n\n    // the arc modifier is a factor of the height of the graphic\n    var arcMod = height / 100 * 1.5;\n\n    // setting our x and y scales\n    var x = d3.scaleLinear().range([0, width - margin.left - margin.right]);\n    var y = d3.scaleLinear().range([height, 0]);\n\n    x.domain([0, 100]);\n    y.domain([height, 0]);\n\n    // setting our x-axis and ticks. Ticks are in the format of football field\n    // yards lines, so any tick over 50 is convered back to a 0-50 range\n    var xAxis = d3.axisBottom().scale(x).tickValues([0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]).tickFormat(function (d, i) {\n      if (i < 6) {\n        return d;\n      }\n      return d - (i - 5) * 20;\n    });\n\n    // creating our svg canvas\n    var svg = d3.select(target).data(data).append('svg').attr('width', width).attr('height', height + margin.top + margin.bottom);\n\n    // creating our curved line accesssor function. lines starting spots are based\n    // on the starting spot of the play on a football field. ending spots are based\n    // on the length of the play. arcs, and curve points are based on length of play\n    // and height of graphic\n    var line = function line(d) {\n      var x1 = x(d.spot).toString();\n      var x2 = x(d.spot + +d.yards).toString();\n      var y1 = y(height).toString();\n      var offset = y(height - +d.yards / 1.25 * arcMod).toString();\n      var offsetX1 = x(d.spot + +d.yards / 4).toString();\n      var offsetX2 = x(d.spot + +d.yards - +d.yards / 4).toString();\n\n      if (+d.yards === 0 && d.result === 'complete') {\n        offset = y(height - 25);\n      }\n\n      return 'M ' + x1 + ',' + y1 + ' C ' + offsetX1 + ', ' + offset + ' ' + offsetX2 + ', ' + offset + ' ' + x2 + ', ' + y1;\n    };\n\n    // creating the group to hold our passing marks\n    var passes = svg.selectAll('g').data(data).enter().append('g').attr('transform', 'translate( ' + margin.left + ', ' + margin.top + ' )');\n\n    // appending the passing arcs\n    passes.selectAll('path').data(function (d) {\n      return d.plays;\n    }).enter().append('path').attr('class', function (d) {\n      if (d.touchdown === true) {\n        return 'pass touchdown yr-' + d.season + ' ' + d.opp;\n      }\n      return 'pass yr-' + d.season + ' ' + d.opp;\n    }).attr('d', function (d) {\n      return line(d);\n    });\n\n    // appending the base group that will hold our baseline\n    var base = svg.append('g');\n\n    base.append('line').attr('x1', 0).attr('x2', width).attr('y1', height).attr('y2', height);\n\n    // appending axis and labels\n    svg.append('g').attr('class', 'x axis').attr('transform', 'translate(' + margin.left + ', ' + height + ')').call(xAxis);\n\n    svg.append('text').attr('class', 'axis-label').attr('text-anchor', 'middle').attr('x', x(50) + margin.left).attr('y', height + 35).attr('class', 'axis-label').text('Cowboys moving left to right');\n  }\n\n  /*\n  ///////////////////////////////////////////////////////////////////////////\n  // DRAWING THE ATTEMPTS GRAPHIC\n  ///////////////////////////////////////////////////////////////////////////\n  */\n\n  function drawAttempts(data) {\n    // creating a color scale to measure yardage against\n    var color = d3.scaleLinear().domain([-10, 100]).interpolate(d3.interpolateHcl).range([d3.rgb('#e9f4fd'), d3.rgb('#0b3f65')]);\n\n    var attContainer = d3.select('#att-graphic').data(data);\n\n    // append a .season div for each season in the data\n    var seasons = attContainer.selectAll('div').data(data).enter().append('div').attr('class', function (d) {\n      return 'season season-' + d.season_year + ' clearfix';\n    });\n\n    // append a season year label to each .season div\n    seasons.append('span').attr('class', 'season-label').text(function (d) {\n      return d.season_year;\n    });\n\n    // append a span for each attempt in a season\n    seasons.selectAll('attempt').data(function (d) {\n      return d.plays;\n    }).enter().append('span').attr('style', function (d) {\n      return 'background-color: ' + color(+d.yards);\n    }).attr('class', function (d) {\n      if (d.interception) {\n        return 'attempt interception';\n      } else if (d.touchdown) {\n        return 'attempt touchdown';\n      } else if (d.result === 'incomplete') {\n        return 'attempt incomplete';\n      }\n      return 'attempt';\n    }).text(function (d) {\n      if (d.interception) {\n        return 'I';\n      }return '';\n    }).on('mousemove', function (d) {\n      return displayTooltip(event, d, '#att-tooltip');\n    }).on('mouseout', function () {\n      return d3.select('#att-tooltip').attr('class', 'tooltip no-show');\n    });\n  }\n\n  /*\n  ///////////////////////////////////////////////////////////////////////////\n  // CONTROLLING WHICH SEASONS GET DISPLAYED IN THE COMPLETION CHART\n  ///////////////////////////////////////////////////////////////////////////\n  */\n\n  var selSeason = 'all';\n  var selOpp = 'all';\n\n  function viewComps() {\n    $('.pass').addClass('no-show');\n\n    if (selSeason !== 'all' && selOpp !== 'all') {\n      $('.yr-' + selSeason + '.' + selOpp).removeClass('no-show');\n    } else if (selSeason === 'all' && selOpp !== 'all') {\n      $('.' + selOpp).removeClass('no-show');\n    } else if (selOpp === 'all' && selSeason !== 'all') {\n      $('.yr-' + selSeason).removeClass('no-show');\n    } else {\n      $('.pass').removeClass('no-show');\n    }\n  }\n\n  $('#comp-season').change(function () {\n    selSeason = $('#comp-season option:selected').attr('value');\n    viewComps();\n  });\n\n  $('#comp-opp').change(function () {\n    selOpp = $('#comp-opp option:selected').attr('value');\n    viewComps();\n  });\n\n  /*\n  ///////////////////////////////////////////////////////////////////////////\n  // FILTERING THE DATA DOWN TO A SELECTED RECEIVER\n  ///////////////////////////////////////////////////////////////////////////\n  */\n\n  function filterReceivers(selected) {\n    // clear the desiredRec array and the div that holds the receiver arc chart\n    desiredRec = [];\n    $('#receiver-arcs').html('');\n\n    // iterate over the original data, creating a new season object and pushing\n    // it to the desiredRec array\n\n    var _loop = function _loop(i) {\n      var season = {\n        season_year: sortedData[i].season_year,\n        plays: []\n      };\n      $.each(sortedData[i].plays, function (k, v) {\n        if (v.target === selected) {\n          season.plays.push(v);\n        }\n      });\n\n      desiredRec.push(season);\n    };\n\n    for (var i = 0; i < sortedData.length; i += 1) {\n      _loop(i);\n    }\n\n    $('#receiver-name').text(selected);\n\n    // hand off the filtered data to the arc drawing function\n    drawPassGraphic(desiredRec, '#receiver-arcs');\n  }\n\n  /*\n  ///////////////////////////////////////////////////////////////////////////\n  // DRAWING THE RECEIVER DROPDOWN\n  ///////////////////////////////////////////////////////////////////////////\n  */\n\n  function drawReceivers(data) {\n\n    // order the receivers by catches\n    var receivers = _.orderBy(data, ['catches'], ['desc']);\n\n    // for each receiver, append an option element to the receiver dropdown\n    $.each(receivers, function (k, v) {\n      $('#catchers').append('<option value=\\'' + v.receiver + '\\'>' + v.receiver + '</option>');\n    });\n\n    // when the dropdown is changed, grab the value of the selected option and\n    // hand it off to the filterReceivers function\n    $('#catchers').change(function () {\n      var selectedRec = $(this).val();\n      filterReceivers(selectedRec);\n    });\n  }\n\n  /*\n  ///////////////////////////////////////////////////////////////////////////\n  // CLOSING THE TOOLTIP\n  ///////////////////////////////////////////////////////////////////////////\n  */\n\n  $('.tooltip button').click(function () {\n    return $('.tooltip').addClass('no-show');\n  });\n\n  /*\n  ///////////////////////////////////////////////////////////////////////////\n  // GETTING OUR DATA\n  ///////////////////////////////////////////////////////////////////////////\n  */\n\n  $.getJSON('../js/data.json', function (data) {\n    // sorts data by week, quarter and time\n    data.forEach(function (value) {\n      var tempYear = value;\n      tempYear.plays = _.orderBy(value.plays, ['week', 'quarter', 'sort_time'], ['asc', 'asc', 'desc']);\n      sortedData.push(tempYear);\n    });\n\n    // passes off sorted data to arc drawing function\n    drawPassGraphic(sortedData, '#graphic');\n    drawAttempts(sortedData);\n\n    // do an inital filter for Jason Witten to draw the first receiver chart\n    filterReceivers('Jason Witten');\n  });\n\n  $.getJSON('../js/rec-data.json', function (data) {\n    drawReceivers(data);\n  });\n});","\"use strict\";\n\n$(document).ready(function () {\n    // injecting current year into footer\n    // DO NOT DELETE\n\n    var d = new Date();\n    var year = d.getFullYear();\n\n    $('.copyright').text(year);\n\n    // some code blocks require javascript to function, like slideshows, synopsis blocks, etc\n    // you can find that code here: https://github.com/DallasMorningNews/generator-dmninteractives/wiki/Cookbook\n\n    // closes any header dropdown menus and resets the up/down chevron\n    function closeList() {\n        $(\".open-list\").removeClass(\"open-list\");\n        $(\".open-button\").removeClass(\"open-button\");\n    }\n\n    var $hedButton = $(\".header-group button\");\n\n    // clicking any of the header dropdown menu buttons (i.e. \"topics\", or \"my account\")\n    $hedButton.click(function (e) {\n\n        // if the button that is clicked is already open, close the menu, else, close the\n        // menu then open the selected menu\n        if ($hedButton.hasClass(\"open-button\") === true && $(this).hasClass(\"open-button\") === true) {\n            closeList();\n        } else {\n            closeList();\n            $(this).addClass(\"open-button\");\n            $(this).siblings(\"ul\").addClass(\"open-list\");\n        }\n        e.stopPropagation();\n    });\n\n    // clicking anywhere in the body should close any open menus\n    $(\"body\").click(function () {\n        closeList();\n    });\n\n    // if the user is signed in, add the subscribed class to the body, which will reveal\n    // the proper my account menu items.\n    if (document.cookie.indexOf(\"DMN-P\") >= 0) {\n        $(\"body\").addClass(\"subscribed\");\n    } else {\n        $(\"body\").removeClass(\"subscribed\");\n    }\n});"]}